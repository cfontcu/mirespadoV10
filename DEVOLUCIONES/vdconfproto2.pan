Confirmación del estado de las líneas de devolución
Articulo     Designación                   NumCaja Lote        Cant.     Estado     Causa      Precinto     Nuevo Estado     Nuevo Precinto Observ                Ultima modificación
_40_________ _100________________________  @L@     _40________ @L@@@@@@@ _30_______ __________ @L@@@@@@@  _ @L@@ _30_______    @L@@@@@@@    _255_________________ _32______________ ¿D-MM-Y.YY ________
|

TABLA=VDDEVOLLIN
WHERE=STATUS BETWEEN VDVST.FDVLAPTO AND VDVST.FDVLNOAPTO;
SELECT=VDDEVOL.DAMEDESART(CODART) DESART;
ORDERBY=DESART,CODLOT,STATUS,CODCAUSA;

PREUPDATE=FEJECUTA(FIF("CAMBIOESTADOS",
                       FEJECUTA("-CCHECKNUEVOPRECINTO","DEBE INTRODUCIR PRECINTO VALIDO PARA EL ESTADO NO APTO",
                                "CCALCULAFECHAS","ERROR EN CCALCULAFECHAS")),"")
                       
POSTCOMMIT=FEJECUTA( FPULSATECLAS("CF6"))
                   
                       

                                
NOINSERT
NODELETE
#NOUPDATE
REGPAG=20

CAMPO=SEQDEVOL,VIRTUAL,OCULTO
CAMPO=CODART,NOUPDATE,UPPER,POSTCHANGE=FDESIGNACION("CSELDESART","No existe artículo"),TITULO("Código")
CAMPO=DESART,NOUPDATE,AUXILIAR,TITULO("Designación"),TITULO("Designación")
CAMPO=NUMCAJA,NOENTER,TITULO("NCaja")
CAMPO=CODLOT,NOUPDATE,UPPER,TITULO("Lote")
CAMPO=CANTIDAD,NOUPDATE,TITULO("Cantidad")

CAMPO=STATUS,POSTCHANGE=FEJECUTA("+CDAMESTATUS",""),OCULTO,"@L@@"
CAMPO=DESSTATUS,AUXILIAR,NOENTER,TITULO("Estado")
CAMPO=CODCAUSA,NOUPDATE,TITULO("Causa")
CAMPO=CODPRECINTO,NOENTER,TITULO("Precinto")
CAMPO=SEP,AUXILIAR,NOENTER,INCLUDECSS="background-color:orange"

CAMPO=NUEVOSTATUS,AUXILIAR,COMBOX("CDAMENUEVOSESTADOS"),COMBOXREADONLY,WLONX=10,POSTCHANGE=FEJECUTA("+CDESNUEVOSTATUS",""),TITULO("Nuevo Estado")
CAMPO=DESNUEVOSTATUS,AUXILIAR,NOENTER
CAMPO=NUEVOCODPRECINTO,AUXILIAR,COMBOX("CDAMENUEVOPRECINTO"),TITULO("NuevoPrecinto"),WLONX=10

CAMPO=OBSERV,TITULO("Observaciones")
CAMPO=CODOPEINS,NOENTER,TITULO("Ultima modificación")
CAMPO=FECINS,NOENTER
CAMPO=HORAINS,NOENTER

CAMPO=CODOPEINVEN,OCULTO,"_32______________"
CAMPO=FECINVEN,OCULTO,"¿D-MM-Y.YY"
CAMPO=HORAINVEN,OCULTO,"________"
CAMPO=CODOPENOAPTO,OCULTO,"_32______________"
CAMPO=FECNOAPTO,OCULTO,"¿D-MM-Y.YY"
CAMPO=HORANOAPTO,OCULTO,"________"
CAMPO=CODOPESALIDAEXT,OCULTO,"_32______________"
CAMPO=FECSALIDAEXT,OCULTO,"¿D-MM-Y.YY"
CAMPO=HORASALIDAEXT,OCULTO,"________"
CAMPO=CODOPEDESTRUYE,OCULTO,"_32______________"
CAMPO=FECDESTRUYE,OCULTO,"¿D-MM-Y.YY"
CAMPO=HORADESTRUYE,OCULTO,"________"
CAMPO=CODOPEMODIF,OCULTO,"_32______________"
CAMPO=FECMODIF,OCULTO,"¿D-MM-Y.YY"
CAMPO=HORAMODIF,OCULTO,"________"

CURSOR=CCHECKNUEVOPRECINTO SELECT :NUEVOCODPRECINTO FROM DUAL WHERE
                                  :NUEVOSTATUS BETWEEN  VDVST.FDVLAPTO AND VDVST.FDVLNOAPTO AND NVL(:NUEVOCODPRECINTO,0)=0;

CURSOR=CAMBIOESTADOS SELECT TO_NUMBER(:STATUS) STATUS FROM DUAL WHERE :STATUS<>:NUEVOSTATUS;

CURSOR=CCALCULAFECHAS BEGIN
                       :STATUS:=:NUEVOSTATUS;
                       IF :NUEVOSTATUS = VDVST.FDVLAPTO THEN 
                          :CODPRECINTO  := :NUEVOCODPRECINTO;
                       ELSIF :NUEVOSTATUS = VDVST.FDVLNOAPTO THEN          
                        BEGIN             		
                       		:CODOPENOAPTO := VDUSER.GETUSER;
                       		:FECNOAPTO    := VD.FECHASYS;
                       		:HORANOAPTO   := VD.HORASYS;
                       		:CODPRECINTO  := :NUEVOCODPRECINTO;
                        END;
                       ELSIF :NUEVOSTATUS = VDVST.FDVLDEVEXT THEN
                        BEGIN
                       		:CODOPESALIDAEXT := VDUSER.GETUSER;
                       		:FECSALIDAEXT    := VD.FECHASYS;
                       		:HORASALIDAEXT   := VD.HORASYS;
                       	END;
                       ELSIF :NUEVOSTATUS = VDVST.FDVLINVENTARIO THEN
                        BEGIN
                       	  :CODOPEINVEN := VDUSER.GETUSER;
                       		:FECINVEN    := VD.FECHASYS;
                       		:HORAINVEN   := VD.HORASYS;                 
                       	END;
                       ELSIF :NUEVOSTATUS = VDVST.FDVLDESTRUIDA THEN
                        BEGIN
                       		:CODOPEDESTRUYE := VDUSER.GETUSER;
                       		:FECDESTRUYE    := VD.FECHASYS;
                       		:HORADESTRUYE   := VD.HORASYS;
                       	END;
                       END IF;     
                      END;@  


#CURSOR=CENTERPRECINTO SELECT DECODE(:NUEVOSTATUS,VDVST.FDVLNOAPTO,1,0) NUEVOCODPRECINTO__ENTER FROM DUAL;

CURSOR=CDAMENUEVOPRECINTO SELECT CODPRECINTO,CODUBI
                              FROM VDPRECINTO 
                              WHERE STATUS = VDVST.FPRCABIERTO AND
                                    VDDEVOL.COMPATIBLEPREC ( VDDEVOL.DAMETIPOPRECINTO(CODPRECINTO), VDDEVOL.DAMETIPOPRECINTOART(:CODART , :NUEVOSTATUS))>0 AND
                                    ((:NUEVOSTATUS IN  VDVST.FDVLNOAPTO  AND :STATUS IN (VDVST.FDVLAPTO,VDVST.FDVLREACOND)) OR
									(:NUEVOSTATUS IN  VDVST.FDVLAPTO  AND :STATUS IN (VDVST.FDVLNOAPTO,VDVST.FDVLREACOND)));
                               
CURSOR=CDESNUEVOSTATUS SELECT DESSTATUS DESNUEVOSTATUS FROM VDSTATUS WHERE STATUS=:NUEVOSTATUS AND TIPOSTATUS='DVL';


CURSOR=CDAMENUEVOSESTADOS SELECT 100,'APTO' FROM DUAL WHERE :STATUS IN (VDVST.FDVLNOAPTO,VDVST.FDVLREACOND) UNION 
                          SELECT 200,'NO APTO' FROM DUAL WHERE :STATUS IN (VDVST.FDVLAPTO,VDVST.FDVLREACOND) UNION
                          SELECT 250,'DEVOLVER A EXTERIOR' FROM DUAL UNION
                          SELECT 300,'INVENTARIO' FROM DUAL WHERE :STATUS=VDVST.FDVLAPTO UNION
                          SELECT 400,'DESTRUCCION' FROM DUAL WHERE :STATUS IN (VDVST.FDVLAPTO,VDVST.FDVLNOAPTO,VDVST.FDVLREACOND);

CURSOR=CDAMESTATUS SELECT DABSTATUS DESSTATUS,DECODE(:STATUS,VDVST.FDVLAPTO,19,18) DESSTATUS__COLOR FROM VDSTATUS WHERE STATUS=:STATUS AND TIPOSTATUS='DVL';

                   
CURSOR=CSELDESART BEGIN
                    SELECT DESART INTO :DESART FROM VDARTIC WHERE CODART=:CODART;
                    EXCEPTION WHEN NO_DATA_FOUND THEN
                      SELECT CODART,DESART INTO :CODART,:DESART FROM VDARTIC WHERE CODEAN LIKE '_'||:CODART;
                  END;@

BOTON=SALIR,960,70,120,120,"Confirmar Protocolo",vertis\confprotolin.png,F4,"Confirmar Lineas Protocolo de la Devolución",INCLUDECSS="border-style:outset;background-color:transparent"