#################################################################################
#MOdulo: VDRETROPED.PAN
#Funcionalidad : Seleccion de pedidos para retrodecederlos y extraerlos de serie
#Autor: JMM      
#Fecha: 30-07-2008
#################################################################################
# HistOrico de cambios:
#
RETROCEDER Y EXTRAER PEDIDOS DE SERIE
                                    ÏÄÄÄÄÄÄ  CLIENTE  ÄÄÄÄÄÄË                                       ÏÄÄ  BULTOS  ÄÄË
Pedido          Div. Serie  Estado  Código     Descripción   Tipo  B. Fecha Serv. P. U. Agencia     Pal. Caj. Uni.  Picos  Lin. Ret.
_20____________ _20_ @L,@@@ @L@@@@  _12_______ _40__________ _10__ _  ¿D-MM-Y.YY @@ @@  _30_______  @@@@ @@@@ @@@@  @L@@@  @@@@  _ 

|

TABLA=VDPEDIDOCAB

WHERE=((STATUS BETWEEN -VDST.FPECPDTEVOL AND -VDST.FPECLANZADO) OR 
        STATUS IN (VDST.FPECSPRPICKINV,VDST.FPECPREPARANDO) OR STATUS=VDST.FPECPDTETRACK) AND 
      NOT EXISTS (SELECT 1 FROM VDMOVIM MOV, VDBULTOLIN BUL, VDBULTOCAB BUC
                   WHERE BUC.CODPED = VDPEDIDOCAB.CODPED AND BUC.CODDIV = VDPEDIDOCAB.CODDIV AND
                         BUC.SEQPED = VDPEDIDOCAB.SEQPED AND BUC.ANOPED = VDPEDIDOCAB.ANOPED AND
                         BUL.CODBULTO = BUC.CODBULTO AND MOV.CODMOV = BUL.CODMOV AND
                         MOV.STATUS >= VDST.FMOVRECOGIDO);

ORDERBY=STATUS,PRIORIDAD,FECSERVICIO,URGENCIA;
WFRAME(205,-2,178,0,"Cliente","")
WFRAME(657,-2,110,0,"Bultos","")
NOLOCK

PREUPDATE=FEJECUTA("@CCHECK","",
                   "-CBULPICKETIQ","HAY BULTOS DE PICKING YA ETIQUETADOS!!!",
                   FIF("CCHECKESPSTK",FANULADEMCSYNC("FINDEMLANULADAS",":CODDEMANDA",":TIPODEMANDA")),"ERROR ANULANDO DEMANDA PARA PEDIDO :CODPED\n :V10ERROR",
                   "CUPDLINEASPED","ERROR ACTUALIZANDO LINEAS DE PEDIDO :CODPED",
                   FIF("CCHECKESPSTK",FEJECUTA("CBORRABULLIN","ERROR BORRANDO LINEAS DE BULTO DE PEDIDO :CODPED",
                                               "CBORRABULCAB","ERROR BORRANDO CABECERAS DE BULTO DE PEDIDO :CODPED")),"ERROR BORRANDO BULTOS DE PEDIDO :CODPED",
                   "CUPDPEDIDO","ERROR ACTUALIZANDO PEDIDO :CODPED",
                   "@CSOLORETROCEDER","",
                   FIF("CCHECKSERIEEXP","CFINSERIEEXP","CDELSERIEEXP"),"ERROR TRATANDO SERIE DE EXPEDICION DE PEDIDO :CODPED",
                   FIF("CCHECKSERIEPREP","CFINSERIEPREP","CDELSERIEPREP"),"ERROR TRATANDO SERIE DE EXPEDICION DE PEDIDO :CODPED")
                   
POSTCOMMIT=FEJECUTA(+FPULSATECLAS("CF2","F2"),"")

CAMPO=CODPED,NOUPDATE,TOOLTIP("Código del pedido"),POSTCHANGE=FDESIGNACION(FIF("CCHECKSTATUS",
                                                                               FEJECUTA("@CSELVOL","","+CSELDATOS",""),
                                                                               FEJECUTA("+CSELBULTOS",""),""),"ERROR OBTENIENDO BULTOS DEL PEDIDO :CODPED"),
                                                   TITULO("Pedido")
CAMPO=CODDIV,NOUPDATE,TOOLTIP("Division o compañia del pedido"),TITULO("Div.")
CAMPO=ANOPED,OCULTO,"@L@@"
CAMPO=SEQPED,OCULTO,"@@@"
CAMPO=CODSERIEPREP,TITULO("Serie")
CAMPO=STATUS,NOUPDATE,TOOLTIP("Estado del pedido\n :DESSTATUS"),POSTCHANGE=FDESIGNACION("+CSELSTATUS","Estado no existe"),TITULO("Estado")
CAMPO=DESSTATUS,AUXILIAR,OCULTO,"_30_"
CAMPO=CODCLIENTE,NOUPDATE,TOOLTIP("Es el Código de cliente que realiza el pedido."),TITULO("Código")
CAMPO=DESCLIENTE,NOUPDATE,TOOLTIP("Cliente al que se sirve el pedido\n :DESCLI "),TITULO("Descripción")
CAMPO=TIPOPEDIDO,NOUPDATE,TOOLTIP("Identifica el tipo del pedido según criterio de la compañía. Es recibido del Host y \ntal como se recibe se introduce en la Base de datos. Tiene utilidad para establecer \nrestricciones a la hora de crear series de pedidos."),TITULO("Tipo")
CAMPO=BACKORDER,NOUPDATE,TOOLTIP("Indicador de backorder recibido del host. Puede tomar los siguientes valores: T= Todas las líneas del pedido deben servirse en su totalidad(estricto).L=Todas las líneas deben servirse pero si una línea está servida o no depende de la política de la línea. P=El pedido puede servirse parcialmente "),
                TITULO("B")
CAMPO=FECSERVICIO,NOUPDATE,TOOLTIP("Fecha prevista de servicio del pedido."),TITULO("Fecha Serv.")
CAMPO=PRIORIDAD,NOUPDATE,TOOLTIP("Prioridad para reservar stock"),TITULO("P")
CAMPO=URGENCIA,NOUPDATE,TOOLTIP("Urgencia del pedido 0 Máxima 99 Mínima."),TITULO("U")
CAMPO=CODAGE,NOUPDATE,OCULTO,"_10_",TOOLTIP("Es el Código de la agencia de transporte para el pedido."),
             POSTCHANGE=FDESIGNACION("CSELDESAGE","NO SE PUEDE OBTENER DESCRIPCION DE LA AGENCIA")
CAMPO=DESAGE,AUXILIAR,NOENTER,TOOLTIP("Es la descipción de la agencia dee transporte para el pedido."),TITULO("Agencia")
CAMPO=PALETS,AUXILIAR,NOENTER,TOOLTIP("Número de palets aproximados del pedido"),TITULO("Pal.")
CAMPO=CAJAS,AUXILIAR,NOENTER,TOOLTIP("Número de cajas aproximadas del pedido"),TITULO("Caj.")
CAMPO=BULTOSUNI,AUXILIAR,NOENTER,TOOLTIP("Número de bultos de unidades aproximados del pedido"),TITULO("Uni.")
CAMPO=PICOS,AUXILIAR,NOENTER,TOOLTIP("Número de picos del pedido"),TITULO("Picos"),WLONX=10
CAMPO=LINEAS,AUXILIAR,NOENTER,TOOLTIP("Número de líneas del pedido"),TITULO("Lin.")
CAMPO=RETROCEDER,UPPER,AUXILIAR,TOOLTIP("Indica si este pedido se debe retroceder"),
              POSTCHANGE=FVERIFICA("SNAR ","Valores permitidos son: S, N A(nular) R(ereservar) o blanco"),TITULO("Ret."),WLONX=20

CAMPO=MAXVOLCAJA,AUXILIAR,OCULTO,"#L##############"
CAMPO=CODDEMANDA,OCULTO,"_20_"
CAMPO=TIPODEMANDA,OCULTO,"_10_"
CAMPO=CODSERIEEXP,OCULTO,"@L@@@@"

CURSOR=CSELVOL SELECT MAX(LARGOCAJA*ANCHOCAJA*ALTOCAJA) MAXVOLCAJA 
                 FROM VDCAJAS
               GROUP BY TIPOVOL 
               HAVING MAX(LARGOCAJA*ANCHOCAJA*ALTOCAJA) IN 
                      (SELECT MAX(LARGOCAJA*ANCHOCAJA*ALTOCAJA) 
                         FROM VDCAJAS 
                        WHERE NVL(VOLDINAMICA,'N')='N' AND 
                              TIPOVOL IN 
                              (SELECT DISTINCT TIPOVOL 
                                 FROM VDARTIC ART,VDPEDIDOLIN PEL  
                                WHERE PEL.CODDIV=:CODDIV AND PEL.ANOPED=:ANOPED AND 
                                      PEL.CODPED=:CODPED AND PEL.SEQPED=:SEQPED AND
                                      PEL.STATUS+0=VDST.FPELASERVIR AND 
                                      PEL.CODART||''=ART.CODART));

CURSOR=CSELDATOS SELECT COUNT(*) LINEAS,
                        SUM(DECODE(ART.EMBCONT,0,0,FLOOR(FLOOR(VDART.CONVIERTE(CANTPEDIDA,ART.UNIDADES,ART.UNIDADESHOST)/DECODE(NVL(ART.UNIEMB,1),0,1,VDART.CONVIERTE(ART.UNIEMB,ART.UNIDADES,ART.UNIDADESHOST)))/ART.EMBCONT))) PALETS,
                        ABS(SUM(DECODE(ART.EMBCONT, 0,0,DECODE(NVL(ART.UNIEMB,1),0,1,VDART.CONVIERTE(ART.UNIEMB,ART.UNIDADES,ART.UNIDADESHOST))*FLOOR(FLOOR(VDART.CONVIERTE(CANTPEDIDA,ART.UNIDADES,ART.UNIDADESHOST)/DECODE(NVL(ART.UNIEMB,1),0,1,VDART.CONVIERTE(ART.UNIEMB,ART.UNIDADES,ART.UNIDADESHOST)))/ART.EMBCONT))) - 
                            SUM(FLOOR(VDART.CONVIERTE(CANTPEDIDA,ART.UNIDADES,ART.UNIDADESHOST)/DECODE(NVL(ART.UNIEMB,1),0,1,VDART.CONVIERTE(ART.UNIEMB,ART.UNIDADES,ART.UNIDADESHOST))))) CAJAS,
                        CEIL(SUM(MOD(VDART.CONVIERTE(CANTPEDIDA,ART.UNIDADES,ART.UNIDADESHOST),DECODE(NVL(ART.UNIEMB,1),0,1,VDART.CONVIERTE(ART.UNIEMB,ART.UNIDADES,ART.UNIDADESHOST))) * LARGOUNI*ANCHOUNI*ALTOUNI) / :MAXVOLCAJA) BULTOSUNI,
                        SUM(MOD(VDART.CONVIERTE(CANTPEDIDA,ART.UNIDADES,ART.UNIDADESHOST),DECODE(NVL(ART.UNIEMB,1),0,1,VDART.CONVIERTE(ART.UNIEMB,ART.UNIDADES,ART.UNIDADESHOST)))) PICOS
                   FROM VDPEDIDOLIN PEL,VDARTIC ART
                  WHERE PEL.CODDIV=:CODDIV AND PEL.ANOPED=:ANOPED AND 
                        PEL.CODPED=:CODPED AND PEL.SEQPED=:SEQPED AND
                        PEL.STATUS+0=VDST.FPELASERVIR AND 
                        PEL.CODART||''=ART.CODART;

CURSOR=CSELDESAGE SELECT DESAGE
                    FROM VDAGENCIA
                   WHERE CODAGE=:CODAGE;

CURSOR=CSELSTATUS SELECT DESSTATUS FROM VDSTATUS WHERE STATUS=:STATUS AND TIPOSTATUS='PEC';

CURSOR=CCHECKSTATUS SELECT :STATUS FROM DUAL WHERE :STATUS < VDST.FPECPREPARANDO;

CURSOR=CCHECK SELECT :RETROCEDER FROM DUAL WHERE :RETROCEDER IN ('A','S','R');

CURSOR=CSOLORETROCEDER SELECT :RETROCEDER FROM DUAL WHERE :RETROCEDER!='R';

CURSOR=CSELBULTOS SELECT SUM(DECODE(BUC.TIPOBULTO,'U',1,0)) BULTOSUNI,
                         SUM(DECODE(BUC.TIPOBULTO,'E',1,0)) CAJAS,
                         SUM(DECODE(BUC.TIPOBULTO,'C',1,0)) PALETS
                    FROM VDBULTOCAB BUC
                   WHERE BUC.CODPED = :CODPED AND BUC.CODDIV = :CODDIV AND
                         BUC.ANOPED = :ANOPED AND BUC.SEQPED = :SEQPED;
                         
CURSOR=CCHECKESPSTK SELECT :STATUS FROM DUAL WHERE :STATUS != VDST.FPECPDTESTOCK;

CURSOR=CUPDLINEASPED UPDATE VDPEDIDOLIN
                        SET STATUS = VDST.FPELASERVIR,
                            CANTASERVIR=CANTPEDIDA,
                            CODOPEMODIF = VDUSER.GETUSER, FECMODIF = VD.FECHASYS, HORAMODIF = VD.HORASYS
                      WHERE CODPED = :CODPED AND CODDIV = :CODDIV AND
                            ANOPED = :ANOPED AND SEQPED = :SEQPED AND :RETROCEDER='S';

CURSOR=CBORRABULLIN DELETE  VDBULTOLIN BUL
                                WHERE BUL.CODBULTO IN (SELECT CODBULTO FROM VDBULTOCAB WHERE 
                                                            CODPED = :CODPED AND CODDIV = :CODDIV AND
                                                            ANOPED = :ANOPED AND SEQPED = :SEQPED);

CURSOR=CBORRABULCAB DELETE FROM VDBULTOCAB 
                     WHERE CODPED = :CODPED AND CODDIV = :CODDIV AND
                           ANOPED = :ANOPED AND SEQPED = :SEQPED;

CURSOR=CUPDPEDIDO UPDATE VDPEDIDOCAB 
                     SET STATUS = DECODE(:RETROCEDER,'A',VDST.FPECANULADO,'R',VDST.FPECLANZADO,VDST.FPECPDTESERIE), 
                         FECRESERVA = 0, HORARESERVA = NULL, 
                         CODSERIEPREP = DECODE(:RETROCEDER,'R',CODSERIEPREP,0), CODSERIEEXP =  DECODE(:RETROCEDER,'R',CODSERIEEXP,0),
                         VOLUMENPEDIDO = 0, PESOPEDIDO = 0,
                         CODDEMANDA = NULL, TIPODEMANDA = NULL,SECLABEL=0,
                         CODOPEMODIF = VDUSER.GETUSER, FECMODIF = VD.FECHASYS, HORAMODIF = VD.HORASYS
                   WHERE CODPED = :CODPED AND CODDIV = :CODDIV AND
                         ANOPED = :ANOPED AND SEQPED = :SEQPED;

CURSOR=CDELSERIEEXP DELETE FROM VDSERIEEXP SEX WHERE CODSERIEEXP = :CODSERIEEXP 
                       AND NOT EXISTS (SELECT 1 FROM VDPEDIDOCAB PEC WHERE PEC.CODSERIEEXP = SEX.CODSERIEEXP);

CURSOR=CDELSERIEPREP DELETE FROM VDSERIEPREP SPR WHERE CODSERIEPREP = :CODSERIEPREP 
                        AND NOT EXISTS (SELECT 1 FROM VDPEDIDOCAB PEC WHERE PEC.CODSERIEPREP = SPR.CODSERIEPREP)
                        AND NOT EXISTS (SELECT 1 FROM VDSERIEEXP SEX WHERE SEX.CODSERIEPREP = SPR.CODSERIEPREP);

CURSOR=CCHECKSERIEEXP SELECT :CODSERIEEXP 
                        FROM DUAL 
                       WHERE EXISTS (SELECT 1 FROM VDPEDIDOCAB WHERE CODSERIEEXP = :CODSERIEEXP AND STATUS = VDST.FPECFINALIZADO) AND
                             NOT EXISTS(SELECT 1 FROM VDPEDIDOCAB WHERE CODSERIEEXP = :CODSERIEEXP AND STATUS < VDST.FPECFINALIZADO);

CURSOR=CFINSERIEEXP UPDATE VDSERIEEXP
                       SET STATUS = VDST.FSEXFINALIZADA, FECTERMIN = VD.FECHASYS, HORATERMIN = VD.HORASYS, 
                           CODOPEMODIF = VDUSER.GETUSER, FECMODIF = VD.FECHASYS, HORAMODIF = VD.HORASYS
                     WHERE CODSERIEEXP = :CODSERIEEXP;

CURSOR=CCHECKSERIEPREP SELECT :CODSERIEPREP
                         FROM DUAL 
                        WHERE EXISTS (SELECT 1 FROM VDPEDIDOCAB WHERE CODSERIEPREP = :CODSERIEPREP AND STATUS = VDST.FPECFINALIZADO) AND
                              NOT EXISTS(SELECT 1 FROM VDPEDIDOCAB WHERE CODSERIEPREP = :CODSERIEPREP AND STATUS < VDST.FPECFINALIZADO);

CURSOR=CFINSERIEPREP UPDATE VDSERIEPREP
                        SET STATUS = VDST.FSPRFINALIZADA, FECTERMIN = VD.FECHASYS, HORATERMIN = VD.HORASYS, 
                            CODOPEMODIF = VDUSER.GETUSER, FECMODIF = VD.FECHASYS, HORAMODIF = VD.HORASYS
                      WHERE CODSERIEPREP = :CODSERIEPREP;

CURSOR=CBULPICKETIQ SELECT :CODPED FROM VDBULTOCAB
                               WHERE CODPED = :CODPED AND CODDIV = :CODDIV AND
                                     ANOPED = :ANOPED AND SEQPED = :SEQPED AND STATUS>=1060 AND STATUS NOT IN (1200,2000,3000);
